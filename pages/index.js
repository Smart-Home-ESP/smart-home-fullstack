import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {PrismaClient} from '@prisma/client'
import {Client} from "@stomp/stompjs";


export async function getStaticProps() {
    const prisma = new PrismaClient()
    const devices = await prisma.device.findMany()
    return {
        props: {devices: devices}
    }
}


export default function Home({devices}) {

    const stompClient = new Client();
    stompClient.configure({
        brokerURL: 'ws://192.168.1.214:9999/mywebsocket/websocket/',
        connectHeaders: {},
        reconnectDelay: 2000,
        heartbeatIncoming: 0,
        heartbeatOutgoing: 20000,
        onConnect: () => {
            console.log("On connect");
        },
        onStompError: (frame) => {
            console.log('Broker reported error: ' + frame.headers['message']);
            console.log('Additional details: ' + frame.body);
        },
        onDisconnect: (frame) => {
            console.log("Stomp Disconnect", frame);
        },
        onWebSocketClose: (frame) => {
            console.log("Stomp WebSocket Closed", frame);
        },
        debug: (str) => {
            console.log(new Date(), str);
        },
        onUnhandledMessage: (msg) => {
            console.log(msg);
        }
    });

    stompClient.activate();

    const handleClick = (e, id) => {
        stompClient.publish({
            destination: "/device/changeDeviceStatus/" + id, body: JSON.stringify({
                task: "status change",
                status: "Off"
            })
        });
    };

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Smart home <a href="https://nextjs.org">ESP</a>
                </h1>


                <div className={styles.grid}>

                    {devices.map(device => (
                        <a key={device.id} className={styles.card} onClick={(e) => handleClick(e, device.id)}>
                            <h2>{device.deviceName} &rarr;</h2>
                            <p>{device.status}</p>
                        </a>
                    ))}
                </div>
            </main>

        </div>
    )
}

